{"version":3,"sources":["components/components/skeleton.js","language.js","components/components/component/statuses.js","components/components/component/useStatus.js","components/components/component/status.js","components/components/useChildren.js","components/components/component/index.js","components/useDidMount.js","components/components/index.js","components/footer/index.js","components/header/index.js","components/incidents/incident/index.js","components/incidents/skeleton.js","components/incidents/index.js","components/status/statuses.js","components/status/useStatus.js","components/status/useRefetch.js","components/status/index.js","components/useIssues.js","components/App.js","serviceWorker.js","index.js"],"names":["styled","div","LocalizedStrings","strings","statuses","operational","name","locName","l10n","components","backgroundColour","performanceIssues","partialOutage","majorOutage","maintenance","unknown","useStatus","labels","useState","status","setStatus","useEffect","Object","values","find","label","toLowerCase","Status","props","StatusCompound","className","replace","useChildren","component","children","setChildren","parentName","title","filter","v","splitName","split","v1","length","Component","ComponentCompound","isCollapseOpen","setCollapseOpen","rawChildren","map","body","id","onClick","theme","collapse","content","isOpened","useDidMount","hasMounted","setHasMounted","ComponentList","loading","sort","a","b","localeCompare","error","nocomponents","Footer","Branding","visible","FooterCompound","process","href","rel","target","general","imprint","branding","Logo","h1","img","Header","HeaderCompound","src","alt","Incident","active","Details","Title","h3","Comment","Created","IncidentCompound","incident","closed_at","moment","created_at","format","toUpperCase","incidents","closed","Container","NoFound","IncidentList","noincidents","Statuses","message","issues","outage","getComponentLabelPercent","componentLabel","statusSet","c","l","useRefetch","refetch","updateTimeAgoDep","Date","localStorage","getItem","fromNow","timeAgo","setTimeAgo","interval","setInterval","clearInterval","StatusBar","h2","ReloadContainer","span","Reload","button","Code","code","hasError","JSON","stringify","errors","refresh","refreshing","fetchData","setLoading","setError","setResults","fetch","then","response","json","data","setItem","catch","toString","parse","useIssues","results","ComponentsContainer","ErrorContainer","ErrorTitle","MainPage","document","getElementsByTagName","setAttribute","getLanguage","componentsLoading","componentsError","componentsResults","componentsRefetch","incidentsLoading","incidentsError","incidentsResults","incidentsRefetch","FourZeroFour","notfound","description","link","App","path","exact","Boolean","window","location","hostname","match","processRelativeTime","number","withoutSuffix","key","isFuture","locale","months","monthsShort","weekdays","weekdaysShort","weekdaysMin","longDateFormat","LT","L","LL","LLL","LLLL","calendar","sameDay","sameElse","nextDay","nextWeek","lastDay","lastWeek","relativeTime","future","past","s","m","mm","h","hh","d","dd","M","MM","y","yy","ordinal","week","dow","doy","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.555c85f3.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport default styled.div`\n  width: 100%;\n  height: 44px;\n  border-radius: 3px;\n\n  :not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n","import LocalizedStrings from 'react-localization'\nimport strings from './strings.json'\n\nexport default new LocalizedStrings(strings)","import l10n from '../../../language'\n\nconst statuses = {\n  operational: {\n    name: \"Operational\",\n    locName: l10n.components.operational,\n    backgroundColour: \"rgba(61, 167, 81, 0.1)\",\n  },\n  performanceIssues: {\n    name: \"Performance Issues\",\n    locName: l10n.components.performanceIssues,\n    backgroundColour: \"rgba(73, 144, 226, 0.1)\",\n  },\n  partialOutage: {\n    name: \"Partial Outage\",\n    locName: l10n.components.partialOutage,\n    backgroundColour: \"rgba(192, 138, 45, 0.1)\",\n  },\n  majorOutage: {\n    name: \"Major Outage\",\n    locName: l10n.components.majorOutage,\n    backgroundColour: \"rgba(217, 68, 48, 0.1)\",\n  },\n  maintenance: {\n    name: \"Maintenance\",\n    locName: l10n.components.maintenance,\n    backgroundColour: \"rgba(96, 96, 96, 0.1)\",\n  },\n  unknown: {\n    name: \"Unknown\",\n    locName: l10n.components.unknown,\n    backgroundColour: \"rgba(177, 177, 177, 0.1)\",\n  },\n};\n\nexport default statuses;\n","import { useState, useEffect } from \"react\";\nimport statuses from \"./statuses\";\n\nconst useStatus = (labels) => {\n  const [status, setStatus] = useState();\n\n  useEffect(() => {\n    setStatus(\n      Object.values(statuses).find((status) =>\n        labels.find((label) => label.name === status.name.toLowerCase())\n      )\n    );\n  }, [labels]);\n\n  if (!status) setStatus(statuses.unknown);\n\n  return [status];\n};\n\nexport default useStatus;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport useStatus from \"./useStatus\";\n\nconst Status = styled.div`\n  background-color: ${(props) => props.backgroundColour};\n  padding: 5px 12px;\n  border-radius: 16px;\n  font-size: 13px;\n  transition: 0.3s;\n`;\n\nconst StatusCompound = ({ labels }) => {\n  const [status] = useStatus(labels);\n\n  return (\n    <Status className={`component-status ${status?.name.toLowerCase().replace(' ', '')}`} backgroundColour={status?.backgroundColour}>\n      {status?.locName}\n    </Status>\n  );\n};\n\nexport default StatusCompound;\n","import { useEffect, useState } from \"react\";\n\nconst useChildren = (component, components) => {\n  const [children, setChildren] = useState();\n\n  useEffect(() => {\n    let parentName = component.title;\n    setChildren(\n      components.filter((v) => {\n        let splitName = v.title.split(':');\n        return v.labels.find((v1) => v1.name === 'subcomponent') && splitName.length > 0 && splitName[0] === parentName;\n      })\n    );\n  }, [component, components]);\n\n  return children;\n};\n\nexport default useChildren;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Status from \"./status\";\nimport Collapse from \"react-collapse\";\nimport useChildren from \"../useChildren\";\n\nconst Component = styled.div`\n  padding: 8px 16px;\n  border-radius: 3px;\n  justify-content: space-between;\n  align-items: center;\n  display: flex;\n\n  :not(:last-child) {\n    margin-bottom: 8px;\n  }\n`\n\nconst ComponentCompound = ({ component, components }) => {\n  const [isCollapseOpen, setCollapseOpen] = useState(false);\n  let rawChildren = useChildren(component, components);\n\n  if (component.labels.find((v) => v.name === 'subcomponent')) {\n    return null; // don't include subcomponents here\n  }\n\n  if (rawChildren?.length > 0 && !component.labels.find((v) => v.name === 'maintenance')) {\n    let children = rawChildren?.map((v) => <Component key={v.id} className=\"component collapsed\">\n      <div>\n        {v.title.split(':')[1]}\n        {v.body ?\n          <span className=\"component-body\">{v.body}</span>\n          : null\n        }\n      </div>\n      <Status labels={v.labels} />\n    </Component>);\n    return (<>\n      <Component onClick={() => setCollapseOpen(!isCollapseOpen)} className=\"component children\">\n        <div>\n          {component.title}\n          <span className=\"component-dropdown\">{isCollapseOpen ? \"►\" : \"▼\"}</span>\n          {component.body ?\n            <span className=\"component-body\">{component.body}</span>\n            : null\n          }\n        </div>\n        <Status labels={component.labels} />\n      </Component>\n      <Collapse theme={{ collapse: 'collapse-component', content: 'collapse-content' }} isOpened={isCollapseOpen}>\n        {children}\n      </Collapse>\n    </>);\n  }\n  return (\n    <Component className=\"component\">\n      <div>\n        {component.title}\n        {component.body ?\n          <span className=\"component-body\">{component.body}</span>\n          : null\n        }\n      </div>\n      <Status labels={component.labels} />\n    </Component>\n  );\n};\n\nexport default ComponentCompound;\n","import { useEffect, useState } from \"react\";\n\nconst useDidMount = () => {\n  const [hasMounted, setHasMounted] = useState();\n\n  useEffect(() => {\n    setHasMounted(true);\n  }, []);\n\n  return [hasMounted];\n};\n\nexport default useDidMount;\n","import React from \"react\";\nimport Skeleton from \"./skeleton\";\nimport Component from \"./component\";\nimport useDidMount from \"../useDidMount\";\nimport l10n from '../../language';\n\nconst ComponentList = ({ loading, components }) => {\n  const [hasMounted] = useDidMount();\n\n  return !loading || hasMounted ? (\n    components?.length > 0 ? (\n      components?.sort((a,b) => a.title.localeCompare(b.title)).map((component) => (\n        <Component key={component.id} component={component} components={components} />\n      ))\n    ) : (\n      <p>{l10n.error.nocomponents}</p>\n    )\n  ) : (\n    <>\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n    </>\n  );\n};\n\nexport default ComponentList;","import React from \"react\";\nimport styled from \"styled-components\";\nimport l10n from \"../../language\";\n\nconst Footer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 16px;\n`;\n\nconst Branding = styled.a`\n  font-size: 13px;\n  display: ${(props) => (props.visible ? \"block\" : \"none\")};\n`;\n\nconst FooterCompound = () => (\n  <Footer>\n    <Branding\n      visible={process.env.REACT_APP_BRANDING !== \"false\"}\n      href=\"https://gommehd.net/terms\"\n      rel=\"noopener\"\n      target=\"_blank\"\n    >\n      {l10n.general.imprint}\n    </Branding>\n    <Branding\n      visible={process.env.REACT_APP_BRANDING !== \"false\"}\n      href=\"https://github.com/tadhglewis/issue-status\"\n      rel=\"noopener\"\n      target=\"_blank\"\n    >\n      {l10n.general.branding}\n    </Branding>\n  </Footer>\n);\n\nexport default FooterCompound;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Title = styled.h1`\n  text-align: center;\n  margin-top: 0;\n  margin-bottom: 0;\n`;\n\nconst Logo = styled.img``;\n\nconst Header = styled.div`\n  text-align: center;\n  margin-bottom: 16px;\n`;\n\nconst HeaderCompound = () =>\n  process.env.REACT_APP_LOGO || process.env.REACT_APP_NAME ? (\n    <Header className=\"app-header\">\n      {process.env.REACT_APP_LOGO ? (<>\n        <Logo\n          className=\"light-logo\"\n          src={process.env.REACT_APP_LOGO}\n          alt={process.env.REACT_APP_NAME}\n        />\n        <Logo\n          className=\"dark-logo\"\n          src={process.env.REACT_APP_DARK_LOGO}\n          alt={process.env.REACT_APP_NAME}\n        />\n      </>) : (\n        <Title>{process.env.REACT_APP_NAME}</Title>\n      )}\n    </Header>\n  ) : null;\n\nexport default HeaderCompound;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nimport ReactMarkdown from \"react-markdown\";\nimport l10n from '../../../language';\n\nconst Incident = styled.div`\n  transition: 0.3s;\n  border-left: 16px solid\n    ${(props) =>\n    props.active ? \"rgba(177, 177, 177,0.2)\" : \"rgba(213, 119, 51, 0.25)\"};\n  border-radius: 3px;\n  padding: 16px;\n  box-shadow: 0px 0px 33px -32px rgba(0, 0, 0, 0.75);\n  margin-top: 8px;\n\n  :not(:last-child) {\n    margin-bottom: 16px;\n  }\n`;\n\nconst Details = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 3px;\n`;\n\nconst Title = styled.h3`\n  margin-right: 16px;\n  font-weight: bold;\n  margin-bottom: 8px;\n  margin-top: 0;\n`;\n\nconst Comment = styled.div`\n  white-space: break-spaces;\n`;\n\nconst Status = styled.div`\n  background-color: ${(props) =>\n    props.active ? \"rgba(96, 96, 96, 0.1)\" : \"rgba(73, 144, 226, 0.1)\"};\n  padding: 5px 12px;\n  border-radius: 16px;\n  font-size: 13px;\n  transition: 0.3s;\n`;\n\nconst Created = styled.div`\n  font-size: 13px;\n  color: #6e6b6b;\n  font-weight: bold;\n`;\n\nconst IncidentCompound = ({ incident }) => (\n  <Incident className=\"incident-container\" active={incident.closed_at}>\n    <Details>\n      <Created>\n        {moment(incident.created_at)\n          .format('LLL')\n          .toUpperCase()}\n      </Created>\n      <Status className={incident.closed_at ? 'incident-status' : 'activeIncident incident-status'} active={incident.closed_at}>\n        {incident.closed_at ? l10n.incidents.closed : l10n.incidents.active}\n      </Status>\n    </Details>\n    <Title>{incident.title}</Title>\n    <Comment>\n      <ReactMarkdown className=\"incident\" children={incident.body} />\n    </Comment>\n  </Incident>\n);\n\nexport default IncidentCompound;\n","import styled from \"styled-components\";\n\nexport default styled.div`\n  width: 100%;\n  height: 84px;\n  border-radius: 3px;\n  background-color: white;\n  box-shadow: 0px 0px 33px -32px rgba(0, 0, 0, 0.75);\n\n  :not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Incident from \"./incident\";\nimport Skeleton from \"./skeleton\";\nimport useDidMount from \"../useDidMount\";\nimport l10n from '../../language';\n\nconst Container = styled.div`\n  margin: 32px auto 0 auto;\n  max-width: 1040px;\n`;\n\nconst Title = styled.div`\n  padding: 0 16px;\n  font-size: 20px;\n  margin-bottom: 16px;\n`;\n\nconst NoFound = styled.div`\n  margin: 0 8px;\n`;\n\nconst IncidentList = ({ loading, incidents }) => {\n  const [hasMounted] = useDidMount();\n\n  return (\n    <Container>\n      <Title>{l10n.incidents.title}</Title>\n      {!loading || hasMounted ? (\n        incidents?.length > 0 ? (\n          incidents?.map((incident) => (\n            <Incident key={incident.id} incident={incident} />\n          ))\n        ) : (\n          <NoFound>{l10n.error.noincidents}</NoFound>\n        )\n      ) : (\n        <>\n          <Skeleton className=\"incident-skeleton\" />\n          <Skeleton className=\"incident-skeleton\" />\n          <Skeleton className=\"incident-skeleton\" />\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default IncidentList;\n","import l10n from '../../language'\n\nconst Statuses = {\n  operational: {\n    message: l10n.status.operational,\n    name: 'operational'\n  },\n  issues: {\n    message: l10n.status.issues,\n    name: 'issues'\n  },\n  outage: {\n    message: l10n.status.outage,\n    name: 'outage'\n  },\n};\n\nexport default Statuses;\n","import { useState, useEffect } from \"react\";\nimport statuses from \"./statuses\";\n\nconst useStatus = (components) => {\n  const [status, setStatus] = useState();\n\n  useEffect(() => {\n    let statusSet = false;\n\n    if (getComponentLabelPercent(components, \"operational\") < 100) {\n      setStatus(statuses.issues);\n      statusSet = true;\n    }\n\n    if (getComponentLabelPercent(components.filter((c) => !c.labels.find((l) => l.name === 'subcomponent')), \"major outage\") > 0) {\n      setStatus(statuses.outage);\n      statusSet = true;\n    }\n\n    if (!statusSet) setStatus(statuses.operational);\n  }, [components]);\n\n  return [status];\n};\n\nconst getComponentLabelPercent = (components, label) =>\n  (components.filter((component) =>\n    component.labels.find((componentLabel) => componentLabel.name === label)\n  ).length *\n    100) /\n  components.length;\n\nexport default useStatus;\n","import { useState, useEffect } from \"react\";\nimport moment from \"moment\";\n\nconst useRefetch = (refetch, updateTimeAgoDep) => {\n  const [timeAgo, setTimeAgo] = useState(\n    moment(\n      new Date(localStorage.getItem(`issueStatusLastFetchcomponent`))\n    ).fromNow()\n  );\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (\n        new Date(localStorage.getItem(`issueStatusLastFetchcomponent`)) <\n        new Date() - 240000\n      ) {\n        refetch(() => {\n          setTimeAgo(\n            moment(\n              new Date(localStorage.getItem(`issueStatusLastFetchcomponent`))\n            ).fromNow()\n          );\n        });\n      } else {\n        setTimeAgo(\n          moment(\n            new Date(localStorage.getItem(`issueStatusLastFetchcomponent`))\n          ).fromNow()\n        );\n      }\n    }, 1000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [refetch]);\n\n  useEffect(() => {\n    setTimeAgo(\n      moment(\n        new Date(localStorage.getItem(`issueStatusLastFetchcomponent`))\n      ).fromNow()\n    );\n  }, [updateTimeAgoDep]);\n\n  return [timeAgo];\n};\n\nexport default useRefetch;","import React from \"react\";\nimport styled from \"styled-components\";\nimport useStatus from \"./useStatus\";\nimport useRefetch from \"./useRefetch\";\nimport l10n from '../../language';\n\nconst StatusBar = styled.div`\n  background-color: ${(props) =>\n    props.backgroundColour ? props.backgroundColour : \"#b1b1b1\"};\n  color: white;\n  padding: 16px;\n  border-radius: 3px;\n  margin-bottom: 32px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  transition: 0.3s;\n`;\n\nconst Status = styled.h2`\n  font-size: 20px;\n  margin: 0;\n  font-weight: normal;\n`;\n\nconst ReloadContainer = styled.span`\n  background-color: transparent;\n  text-align: right;\n  padding: 0;\n  font-size: 13px;\n`;\n\nconst Reload = styled.button`\n  background-color: transparent;\n  color: white;\n  text-decoration: underline;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n`;\n\nconst Code = styled.code`\n  white-space: pre-wrap;\n  display: block;\n`;\n\n// TODO: change all systems status based on current status of all components\nconst StatusCompound = ({ loading, error, components, refetch }) => {\n  const [status] = useStatus(components);\n  const [timeAgo] = useRefetch(refetch, loading);\n\n  return (\n    <>\n      {error.hasError && (\n        <Code>\n          <div>{l10n.error.message.title}</div>\n          <div>{l10n.error.message.body}</div>\n          {JSON.stringify(error.errors, null, 3)}\n        </Code>\n      )}\n      <StatusBar className={`status-bar ${status?.name}`} backgroundColour={status?.backgroundColour}>\n        <Status>{status?.message}</Status>\n        <ReloadContainer>{l10n.general.refresh}<Reload onClick={refetch}>{loading ? l10n.general.refreshing : timeAgo}</Reload></ReloadContainer>\n      </StatusBar>\n    </>\n  );\n};\n\nexport default StatusCompound;\n","import { useState, useEffect } from \"react\";\n\nconst useIssues = (label) => {\n  const [results, setResults] = useState([]);\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // GitHub rate limiting: 60 requests per hour/unauthenticated - fetches 15 times per hour / sending 30 requests (2 requests per fetch) and caches in localStorage\n    if (\n      new Date(localStorage.getItem(`issueStatusLastFetch${label}`)) <\n      new Date() - 240000\n    ) {\n      fetchData(setLoading, setError, setResults, label);\n    } else {\n      setResults(JSON.parse(localStorage.getItem(`issueStatus${label}`)));\n      setLoading(false);\n      setError();\n    }\n  }, [label]);\n\n  return [\n    loading,\n    error,\n    results || [],\n    () => fetchData(setLoading, setError, setResults, label),\n  ];\n};\n\nconst fetchData = (setLoading, setError, setResults, label) => {\n  setLoading(true);\n  fetch(\n    `https://api.github.com/repos/${process.env.REACT_APP_REPOSITORY}/issues?state=all&labels=issue status,${label}`\n  )\n    .then((response) => {\n      return response.json();\n    })\n    .then((data) => {\n      setError();\n      localStorage.setItem(`issueStatusLastFetch${label}`, new Date());\n      localStorage.setItem(`issueStatus${label}`, JSON.stringify(data));\n      setResults(data);\n      setLoading(false);\n    })\n    .catch((error) => {\n      setError(error.toString());\n      localStorage.setItem(`issueStatusLastFetch${label}`, new Date());\n      setResults(JSON.parse(localStorage.getItem(`issueStatus${label}`)));\n      setLoading(false);\n    });\n};\n\nexport default useIssues;\n","import React from \"react\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport \"./App.css\";\nimport Components from \"./components\";\nimport Footer from \"./footer\";\nimport Header from \"./header\";\nimport Incidents from \"./incidents\";\nimport Status from \"./status\";\nimport useIssues from \"./useIssues\";\nimport l10n from '../language';\n\nconst Container = styled.div`\n  max-width: 1008px;\n  padding: 16px;\n  margin: 16px auto;\n`;\n\nconst ComponentsContainer = styled.div`\n  box-shadow: 0px 0px 33px -32px rgba(0, 0, 0, 0.75);\n  border-radius: 3px;\n  padding: 16px;\n`;\n\nconst ErrorContainer = styled.div`\n  text-align: center;\n  margin: 75px 0;\n`;\n\nconst ErrorTitle = styled.h1`\n  font-size: 42pt;\n  margin: 0;\n`;\n\nconst App = () => {\n  return (\n    <Container>\n      <Header />\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={MainPage} />\n          <Route path=\"**\" component={FourZeroFour} />\n        </Switch>\n      </Router>\n      <Footer />\n    </Container>\n  );\n};\n\nconst MainPage = () => {\n  // set html lang from l10n module\n  document.getElementsByTagName('html')[0].setAttribute('lang', l10n.getLanguage());\n  // loading, errors, results, refetch\n  const [\n    componentsLoading,\n    componentsError,\n    componentsResults,\n    componentsRefetch,\n  ] = useIssues(\"component\");\n  const [\n    incidentsLoading,\n    incidentsError,\n    incidentsResults,\n    incidentsRefetch,\n  ] = useIssues(\"incident\");\n\n  return (<>\n    <ComponentsContainer className=\"components-container\">\n      <Status\n        loading={componentsLoading || incidentsLoading}\n        error={{\n          hasError: componentsError || incidentsError,\n          errors: { componentsError, incidentsError },\n        }}\n        components={componentsResults}\n        refetch={() => {\n          componentsRefetch();\n          incidentsRefetch();\n        }}\n      />\n      <Components\n        loading={componentsLoading}\n        components={componentsResults}\n      />\n    </ComponentsContainer>\n    <Incidents loading={incidentsLoading} incidents={incidentsResults} />\n  </>);\n}\n\nconst FourZeroFour = () => {\n  return (<ErrorContainer>\n    <ErrorTitle>{l10n.error.notfound.title}</ErrorTitle>\n    <p>{l10n.error.notfound.description}</p>\n    <p><a href=\"/\">{l10n.error.notfound.link}</a></p>\n  </ErrorContainer>);\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport moment from \"moment\";\nimport l10n from './language';\n\nfunction processRelativeTime(number, withoutSuffix, key, isFuture) {\n  var format = {\n      'm': ['eine Minute', 'einer Minute'],\n      'h': ['eine Stunde', 'einer Stunde'],\n      'd': ['ein Tag', 'einem Tag'],\n      'dd': [number + ' Tage', number + ' Tagen'],\n      'M': ['ein Monat', 'einem Monat'],\n      'MM': [number + ' Monate', number + ' Monaten'],\n      'y': ['ein Jahr', 'einem Jahr'],\n      'yy': [number + ' Jahre', number + ' Jahren']\n  };\n  return withoutSuffix ? format[key][0] : format[key][1];\n}\nmoment.locale('de', {\n  months : \"Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember\".split(\"_\"),\n  monthsShort : \"Jan._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.\".split(\"_\"),\n  weekdays : \"Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag\".split(\"_\"),\n  weekdaysShort : \"So._Mo._Di._Mi._Do._Fr._Sa.\".split(\"_\"),\n  weekdaysMin : \"So_Mo_Di_Mi_Do_Fr_Sa\".split(\"_\"),\n  longDateFormat : {\n      LT: \"HH:mm [Uhr]\",\n      L : \"DD.MM.YYYY\",\n      LL : \"D. MMMM YYYY\",\n      LLL : \"D. MMMM YYYY LT\",\n      LLLL : \"dddd, D. MMMM YYYY LT\"\n  },\n  calendar : {\n      sameDay: \"[Heute um] LT\",\n      sameElse: \"L\",\n      nextDay: '[Morgen um] LT',\n      nextWeek: 'dddd [um] LT',\n      lastDay: '[Gestern um] LT',\n      lastWeek: '[letzten] dddd [um] LT'\n  },\n  relativeTime : {\n      future : \"in %s\",\n      past : \"vor %s\",\n      s : \"ein paar Sekunden\",\n      m : processRelativeTime,\n      mm : \"%d Minuten\",\n      h : processRelativeTime,\n      hh : \"%d Stunden\",\n      d : processRelativeTime,\n      dd : processRelativeTime,\n      M : processRelativeTime,\n      MM : processRelativeTime,\n      y : processRelativeTime,\n      yy : processRelativeTime\n  },\n  ordinal : '%d.',\n  week : {\n      dow : 1, // Monday is the first day of the week.\n      doy : 4  // The week that contains Jan 4th is the first week of the year.\n  }\n});\nmoment.locale(l10n.getLanguage());\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}